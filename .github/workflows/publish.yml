name: Publish to NPM

on:
  workflow_dispatch:
    inputs:
      version_type:
        description: 'Version bump type'
        required: true
        default: 'patch'
        type: choice
        options:
        - patch
        - minor
        - major
        - prerelease
      tag:
        description: 'NPM tag (latest, beta, alpha, etc.)'
        required: true
        default: 'latest'
        type: string
      release_notes:
        description: 'Release notes (markdown supported)'
        required: true
        type: string
        default: |
          ## 🚀 What's New
          -

          ## 🐛 Bug Fixes
          -

          ## 💥 Breaking Changes
          - None

permissions:
  contents: write
  packages: write

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'
        registry-url: 'https://registry.npmjs.org'

    - name: Install dependencies
      run: npm ci

    - name: Run linter (if available)
      run: npm run lint --if-present

    - name: Run type check (if available)
      run: npm run typecheck --if-present

    - name: Run tests
      run: npm run test:full

    - name: Configure Git
      run: |
        git config --global user.name "GitHub Actions"
        git config --global user.email "actions@github.com"

    - name: Bump version
      run: |
        npm version ${{ inputs.version_type }} --no-git-tag-version
        echo "NEW_VERSION=$(node -p "require('./package.json').version")" >> $GITHUB_ENV

    - name: Commit version bump
      run: |
        git add package.json package-lock.json
        git commit -m "chore: bump version to ${{ env.NEW_VERSION }}"
        git tag "v${{ env.NEW_VERSION }}"

    - name: Push changes and tags
      run: |
        git push origin master
        git push origin "v${{ env.NEW_VERSION }}"

    - name: Publish to NPM
      run: npm publish --tag ${{ inputs.tag }}
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ env.NEW_VERSION }}
        name: Release v${{ env.NEW_VERSION }}
        body: |
          ${{ inputs.release_notes }}

          ---

          ## 📦 Installation
          ```bash
          npm install -g @mihailoradovi/database-mcp-server@${{ inputs.tag }}
          # or
          npx @mihailoradovi/database-mcp-server@${{ inputs.tag }}
          ```

          **Full Changelog**: https://github.com/${{ github.repository }}/compare/v${{ env.PREVIOUS_VERSION }}...v${{ env.NEW_VERSION }}
        draft: false
        prerelease: ${{ inputs.tag != 'latest' }}